Step 1: Add Logging Configuration
Update your application.properties with log file path and log level settings:

# Logging Configuration
logging.level.root=INFO
logging.level.com.example.bankapp=DEBUG  # Replace with your base package like com.bankapp
logging.file.name=/var/log/bankapp/bankapp.log
Note: Make sure /var/log/bankapp/ exists and is writable by the user running the app:

in ec2 instance where you are running container
-----------------------------------------------
sudo mkdir -p /var/log/bankapp
sudo chown -R ubuntu:ubuntu /var/log/bankapp

Step 2: Optional — Create logback-spring.xml for Better Formatting
Place this in src/main/resources/logback-spring.xml:

xml
Copy
Edit
<configuration>
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>/var/log/bankapp/bankapp.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>/var/log/bankapp/bankapp.%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <root level="INFO">
        <appender-ref ref="FILE" />
    </root>
</configuration>
This gives your logs a clean and structured format which is easier for Logstash to parse.

✅ Step 3: Restart Your Spring Boot Application
bash
Copy
Edit
./mvnw clean package
java -jar target/your-app.jar
Ensure logs are being written to:

bash
Copy
Edit
tail -f /var/log/bankapp/bankapp.log
✅ Step 4: Proceed to Filebeat + Logstash Setup
Now that your app is writing logs to /var/log/bankapp/bankapp.log, proceed to:

Install Filebeat on the same server

Point Filebeat to this log file

Send it to Logstash

Parse and store in Elasticsearch

View in Kibana

